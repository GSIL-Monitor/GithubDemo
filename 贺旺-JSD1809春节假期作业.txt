
所有作业在2月12号上课之前 登录github  账号：NullMrxu  密码：2018tedu.cn
上传到上面GitDemo，上传文件信息为你的名字

春节假期作业安排：
一：用XMind 思维导图画出 java所有学过的知识点分6个阶段（保存格式为.xmind文件）
1.）java基础和面向对象
2.）javaSE和核心API
3.）HTML/CSS
4.）数据库和JDBC
5.）Servlt和JSP
6.）SpringMVC和Spring，MyBtis



二：以下55道常见面试题答案整理出来保存格式为.txt文件

1.基本数据类型有哪些及所占内存的字节数和位数，
byte 1字节8位   short 2字节16位   float  8字节32位   double  8字节54位   char 2字节16位   boolean  1字节8位
linux中常用的指令
~cd打开某一位置目录、~pwd查看当前所在目录、~mkdir新建目录，在当前位置新建一个名为test的目录mkdir test
2.do-while while的区别    
do-while语句是一种后测试循环语句，即只有在循环体中的代码执行之后，才会测试出口条件。其实就是，代码在刚开始执行的时候，都是要先走一遍do循环体内的代码，然后在与while里面的条件进行判断，成立循环就一直继续下去，不成立就跳出循环。循环体内代码至少被执行一次。
while语句是属于前测试循环语句，也就是说，在循环体内的代码被执行之前，就会对出口条件求值。其实就是先与while里面的条件进行判断，成立就走循环体内的代码，不成立就不走循环体内代码。循环体内的代码有可能永远不会执行。
3.switch case中的表达式能是什么类型的
①表达式：可以控制程序的执行过程，表达式的结果必须是整数、字符或枚举量值。
②case后面的常量标号，其类型应与表达式的数据类型相同。表示根据表达式计算的结果，可能在case的标号中找到，标号不允许重复，具有唯一性，所以，只能选中一个case标号。尽管标号的顺序可以任意的，但从可读性角度而言，标号应按顺序排列。
③语句序列是switch语句的执行部分。针对不同的case标号，语句序列的执行内容是不同的，每个语句序列允许有一条语句或多条语句组成，但是case中的多条语句不需要按照复合语句的方式处理（用{}将语句括起来），若某一语句序列i为空，则对应的break语句可以省略（去掉）。 
④break是中断跳转语句，表示在完成相应的case标号规定的操作之后，不继续执行switch语句的剩余部分而直接跳出switch语句之外，继而执行switch结构后面的第一条语句，如果不在switch结构的case中使用break语句。程序就会接着执行下面的语句。
⑤default用于处理所有switch结构的非法操作。当表达式的值与任何一个case都不匹配时，则执行default语句。
 gc的原理和好处	
垃圾回收机制是由垃圾收集器Garbage Collection GC来实现的，GC是后台的守护进程。它的特别之处是它是一个低优先级进程，但是可以根据内存的使用情况动态的调整他的优先级。因此，它是在内存中低到一定限度时才会自动运行，从而实现对内存的回收。这就是垃圾回收的时间不确定的原因
什么是递归：
自己调用自己产生的重入现象	
String类的常用方法	
length()、getBytes()、equels()、toUpperCase、trim()、charAt、indexOf、replace
String为什么是不可变对象
因为他是final修饰的不可以改变
4.数组和集合的特点，数组和集合的转化	
看几个常用的集合类，如上图继承关系图，可以看到他们都集成了一个抽象类AbstractCollection，这个类中就实现了Collection接口的两个方法：
toArray ( )
toArray ( T[ ] a )
数组转集合，就要利用到数组的工具类Arrays了，该类中定义了数组转为List的一个方法：
asList(T... a)	
5. ArrayList和linkedList的底层实现
.ArrayList是实现了基于动态数组的数据结构，LinkedList基于链表的数据结构。 
    2.对于随机访问get和set，ArrayList优于LinkedList，因为ArrayList可以随机定位，而LinkedList要移动指针一步一步的移动到节点处。（参考数组与链表来思考）
    3.对于新增和删除操作add和remove，LinedList比较占优势，只需要对指针进行修改即可，而ArrayList要移动数据来填补被删除的对象的空间。
6. ArrayList和LinkedList的区别
LinkedeList和ArrayList都实现了List接口，但是它们的工作原理却不一样。它们之间最主要的区别在于ArrayList是可改变大小的数组，而LinkedList是双向链接串列(doubly LinkedList)。ArrayList更受欢迎，很多场景下ArrayList比LinkedList更为适用
7.List和set的区别，HashMap的特点
List特点：元素有放入顺序，元素可重复
Map特点：元素按键值对存储，无放入顺序
Set特点：元素无放入顺序，元素不可重复（注意：元素虽然无放入顺序，但是元素在set中的位置是有该元素的HashCode决定的，其位置其实是固定的）
List接口有三个实现类：LinkedList，ArrayList，Vector
LinkedList：底层基于链表实现，链表内存是散乱的，每一个元素存储本身内存地址的同时还存储下一个元素的地址。链表增删快，查找慢
ArrayList和Vector的区别：ArrayList是非线程安全的，效率高；Vector是基于线程安全的，效率低
Set接口有两个实现类：HashSet(底层由HashMap实现)，LinkedHashSet
SortedSet接口有一个实现类：TreeSet（底层由平衡二叉树实现）
8.String为什么是不可变对象,String中常用的方法
9.String和StringBuider的区别
String是不可变字符串每一次拼接会创建多个对象、StringBuider是可变字符串只会创建一个对象
  StringBuider和StringBuffer的区别，Vector和ArrayList的区别，HashMap和  Hashtable
StringBuffer、Hashtable、Vector是线程安全的，但是运行速度慢
10. 什么是面向对象，什么是类，什么是对象
因此面向对象这个对象，指的是客体。所谓客体是指客观存在的对象实体和主观抽象的概念。面向对象是为了解决系统的可维护性，可扩展性，可重用性，我们再进一步思考，面向对象为什么能解决系统的可维护性，可扩展性，可重用性
11.面向对象有些什么特点？面向对象之间的关系 ？
封装多态继承接口面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候一个一个依次调用就可以了；面向对象是把构成问题事务分解成各个对象，建立对象的目的不是为了完成一个步骤，而是为了描叙某个事物在整个解决问题的步骤中的行为
12.什么是构造器？有什么作用？
构造器可以提供许多特殊的方法，构造器作为一种方法，负责类中成员变量（域）的初始化。实例构造器分为缺省构造器和非缺省构造器。构造器最大的用处就是在创建对象时执行初始化，当创建一个对象时，系统会为这个对象的实例进行默认的初始化。如果想改变这种默认的初始化，就可以通过自定义构造器来实现。
13.什么是序列化，有什么作用
 序列化简单来说就保存对象在内存中的状态也可以说是实例化变量。这是Java提供的用来保存 Object state，一种保存对象状态的机制。只有实现了serializable接口的类的对象才能被实例化。  1当你想把内存中的对象写入到硬盘时2当你想用套接字在网络上传输对象时3当你想通过RMI调用对象时
14. 常用的流有哪一些	
字节流、字符流、文件流
15.线程的生命周期，线程的创建方式，什么是同步，异步
进程是一个具有独立功能的应用程序，能够申请和分配系统资源。程序本身是没有生命的，只有处理器赋予其执行权力时，程序才能够成为一个活动的实体，我们称之为进程。一个进程可以包含多个线程，线程是进程的最小调度单位。

多个进程相互独立，多个线程共享进程资源。不同进程中的线程相互不可见。

线程依赖于进程，每个线程都有进程带来的各自独立的资源。

线程之间切换比进程之间切换节约系统开销。但是多线程的切换，开销仍然很大。新建（New）、就绪（Runnable）、运
行（Running）、阻塞（Blocked）和死亡（Dead）五种状态
16.什么是死锁	
多个线程相互之间争夺资源造成的
17.什么是数据库
存储数据的单元
18.什么是ddl，dml语句 他们有什么特点，数据库中的内连接和外连接，以及左外和右  外连接的区别
DML（data manipulation language）： 
它们是SELECT、UPDATE、INSERT、DELETE，就象它的名字一样，这4条命令是用来对数据库里的数据进行操作的语言 
DDL（data definition language）： 
DDL比DML要多，主要的命令有CREATE、ALTER、DROP等，DDL主要是用在定义或改变表（TABLE）的结构，数据类型，表之间的链接和约束等初始化工作上，他们大多在建立表时使用 
DCL（Data Control Language）： 
是数据库控制功能。是用来设置或更改数据库用户或角色权限的语句，包括（grant,deny,revoke等）语句。在默认状态下，只有sysadmin,dbcreator,db_owner或db_securityadmin等人员才有权力执行DCL，左外包含左边的，则右外相反。
19.什么是事物，他的特点有哪一些
单一性、原子性、由一个开启的事务完成
20.怎么提高数据库的性能
表设计好、进行数据库优化
21.什么是索引，什么是视图，他们有什么特点，优点和缺点
索引是对数据库表中一列或多列的值进行排序的一种结构，例如 employee 表的姓（name）列。如果要按姓查找特定职员，与必须搜索表中的所有行相比，索引会帮助您更快地获得该信息。 视图能够简化用户的操作
2、视图使用户能以多钟角度看待同一数据
3、视图对重构数据库提供了一定程度的逻辑独立性
4、视图能够对机密数据提供安全保护
5、适当的利用视图可以更清晰的表达查询，
22.什么是存储过程，方法和存储过程有什么区别，什么是触发器
将常用的或很复杂的工作，预先用SQL语句写好并用一个指定的名称存储起来, 那么以后要叫数据库提供与已定义好的存储过程的功能相同的服务时,只需调用execute,即可自动完成命令。 .存储过程只在创造时进行编译，以后每次执行存储过程都不需再重新编译，而一般SQL语句每执行一次就编译一次,所以使用存储过程可提高数据库执行速度。 
2.当对数据库进行复杂操作时(如对多个表进行Update,Insert,Query,Delete时），可将此复杂操作用存储过程封装起来与数据库提供的事务处理结合一起使用。 
3.存储过程可以重复使用,可减少数据库开发人员的工作量 。
4.安全性高,可设定只有某此用户才具有对指定存储过程的使用权。
23.分页怎么实现
limit实现
24.怎么实现分布式管理
分块管理
25.什么是servlet，servlet的生命周期
加载-->实例化-->服务-->销毁
26.什么是servlet的监听和拦截器，什么是mvc
、servlet：servlet是一种运行服务器端的java应用程序，具有独立于平台和协议的特性，并且可以动态的生成web页面，它工作在客户端请求与服务器响应的中间层。
         2、filter：filter是一个可以复用的代码片段，可以用来转换HTTP请求、响应和头信息。Filter不像Servlet，它不能产生一个请求或者响应，它只是修改对某一资源的请求，或者修改从某一的响应。
 3、listener：监听器，从字面上可以看出listener主要用来监听只用。通过listener可以监听web服务器中某一个执行动作，并根据 其要求作出相应的响应。通俗的语言说就是在application，session，request三个对象创建消亡或者往其中添加修改删除属性时自动执 行代码的功能组件。
         4、interceptor：      5、servlet、filter、listener是配置到web.xml中，interceptor不配置到web.xml中，struts的拦截器配置到struts.xml中。spring的拦截器配置到spring.xml中。 
27.什么是重定向，重定向和转化有什么区别
客户端向服务器发送一个302状态码和地址重新请求，重定向地址改变，转发不会
28.jsp和servlet有什么区别
jsp经编译后就变成了Servlet.(JSP的本质就是Servlet，JVM只能识别java的类，不能识别JSP的代码,Web容器将JSP的代码编译成JVM能够识别的java类)
2.jsp更擅长表现于页面显示,servlet更擅长于逻辑控制.
3.Servlet中没有内置对象，Jsp中的内置对象都是必须通过HttpServletRequest对象，HttpServletResponse对象以及HttpServlet对象得到.
Jsp是Servlet的一种简化，使用Jsp只需要完成程序员需要输出到客户端的内容，Jsp中的Java脚本如何镶嵌到一个类中，由Jsp容器完成。而Servlet则是个完整的Java类，这个类的Service方法用于生成对客户端的响应。
29.jsp的内置对象有哪一些，指令有哪一些
pageContext、request、response、session、application、exception、out、config、page include、page、import
30.get和post的区别
传送方式：get通过地址栏传输，post通过报文传输。
2、传送长度：get参数有长度限制（受限于url长度），而post无限制
3、GET和POST还有一个重大区别，简单的说：
GET产生一个TCP数据包；POST产生两个TCP数据包
31.session和cookie的区别
：cookie以文本格式存储在浏览器上，存储量有限；而会话存储在服务端，可以无限量存储多个变量并且比cookie更安全
在php中可以指定站点的访问者信息存储在session或者cookie中，它们都可以完成同样的事
32.spring的优缺点
beans：表示的是对spring以及所有bean对象的管理

core：包含了最底层的开发支持，例如:依赖的注入关系，资源文件的访问，数据类型的转换

context:提供的是一个完整的容器上下文，在这个上下文可以处理对象生命周期或者是事务

表达式语言模块：利用spel实现表达式语言的操作，以增强string的功能
33.spring mvc的流程
客户端发送请求先要经过前端控制器，请求被Spring 前端控制器DispatcherServlet获取，如详细图第一步：DispatcherServlet对请求URL进行解析（比如我们发送一个url如下的请求（http://localhost:8080/SpringMVC/hello.action），就会得到请求资源标示符（URI，相当于就是上面的hello.action ）。
              2、然后前端控制器DispatcherServlet根据URI，调用处理器映射器（HandlerMapping）获得该Handler配置的所有相关对象（包括Handler对象以及Handler对象对应的拦截器），最后生成处理器对象并返回给前端控制器。
              3、前端控制器调用处理器适配器去执行Handler，Handler执行完成给适配器返回ModelAndView，并将ModelAndView返回给DispatcherServlet。
              4、DispatcherServlet将ModelAndView传给ViewReslover视图解析器解析（解析成jsp），并返回View。
              5、DispatcherServlet对View进行渲染视图（即将模型数据填充至视图中）。
              6、最后将渲染视图的结果响应给客户端。
34.常用的注解和注入方式
@Resources注入

       @Resource装配顺序
　　1. 如果同时指定了name和type，则从Spring上下文中找到唯一匹配的bean进行装配，找不到则抛出异常
　　2. 如果指定了name，则从上下文中查找名称（id）匹配的bean进行装配，找不到则抛出异常
　　3. 如果指定了type，则从上下文中找到类型匹配的唯一bean进行装配，找不到或者找到多个，都会抛出异常
　　4. 如果既没有指定name，又没有指定type，则自动按照byName方式进行装配；如果没有匹配，则回退为一个原始类型进行匹配，如果匹配则自动装配； 

b. @Autowired注入
       1.   @Autowired 默认是按照byType进行注入的 ; 
                 如果没有一个匹配那么就报异常。
                 但是当byType方式找到了多个符合的bean，又是怎么处理的？
       2.    @Autowired默认先按byType，如果发现找到多个bean，则又按照byName方式比对，如果还有多个，则报出异常。
35.mybatis和ibatis的区别
传入参数
iBatis是parameterClass，而MyBatis是可以不写的，也可以用parameterType;parameterClass，而MyBatis是可以不写的，也可以用parameterType;
接收参数、 判断语句，这个也是非常常用和重要的地方。
36.mybatis和jdbc的关系
MyBatis是一个支持普通SQL查询，存储过程和高级映射的优秀持久层框架。MyBatis消除了几乎所有的JDBC代码和参数的手工设置以及对结果集的检索封装。MyBatis可以使用简单的XML或注解用于配置和原始映射，将接口和Java的POJO（Plain Old Java Objects，普通的Java对象）映射成数据库中的记录。
37.mybaits和hibernate的区别
myBatis易学，Hinernate相对复杂，门槛高。当系统属于二次开发，无法对数据结构做到控制和修改，MyBatis需要手写SQL语句
38.什么是ajax，ajax的底层实现，ajax中常用的提交方式有哪一些
异步消息处理机制。Ajax 技术核心是 XMLHttpRequest 对象(简称 XHR)，这是由微软首先引入的一个特性，其他浏览器提供商后来都提供了相同的实现。在 XHR 出现之前，Ajax 式的通信必须借助一些手段来实现，大多数是使用隐藏的框架或内嵌框架。XHR 的出现，提供了向服务器发送请求和解析服务器响应提供了流畅的接口。能够以异步方式从服务器获取更多的信息，这就意味着，用户只要触发某一事件，在不刷新网页的情况下，更新服务器最新的数据。
39.线程池，连接池的原理
先启动若干数量的线程，并让这些线程都处于睡眠状态，当客户端有一个新请求时，就会唤醒线程池中的某一个睡眠线程，让它来处理客户端的这个请求，当处理完这个请求后，线程又处于睡眠状态。
40.什么是jdbc
 JDBC代表Java数据库连接(Java Database Connectivity)，它是用于Java编程语言和数据库之间的数据库无关连接的标准Java API，换句话说：JDBC是用于在Java语言编程中与数据库连接的API。
41.jdbc连接数据库的步骤
获取引擎、得到连接对象、执行SQL语句、处理结果集
42.statement和prepstateme的区别
prepstateme会进行预编译，将sql语句预编译，会将SQL语句在执行前编译，防止SQL语句注入。
43.怎么解决高并发
应用和静态资源分离、页面缓存、集群与分布式、反向代理
44.什么是分布式管理
就是同一个服务，把数据库的不同部分分开建立到不同的服务器上。以缓解数据库大量数据访问的压力。
很多大公司的业务量比较大，
每天的访问量都达到几百万上千万，甚至上亿的访问量，在访问量不是很大的情况下，
是可以通过提高单台服务器的配置来满足需求的。但是当单台服务器已经满足不了需求的时候就需要做分布式处理了。
毕竟一台服务器的处理能力是有限的。 如果分散到几台甚至几十台几百天电脑上，其优势就显现出来了。
服务器上的数据共享，如果用系统来连接 不同服务器，只需要制定不同服务器的地址即可。 
45.mysql中日期的加减法
   select (date '2015-04-10' - date '2014-03-11') from dual 
set @dt = now();
select date_add(@dt, interval 1 day);           - 加1天
select date_add(@dt, interval 1 hour);                -加1小时
select date_add(@dt, interval 1 minute);    - 加1分钟
select date_add(@dt, interval 1 second);             -加1秒
select date_add(@dt, interval 1 microsecond);     -加1毫秒
select date_add(@dt, interval 1 week);         -加1周
select date_add(@dt, interval 1 month);        -加1月
select date_add(@dt, interval 1 quarter);             -加1季
select date_add(@dt, interval 1 year);           -加1年
46.ajax为什么要实现异步刷新
所谓的异步刷新，就是不刷新整个网页进行更新数据。
　　只有通过js才能实现Ajax，进而实行异步刷新
　　表单提交数据和Ajax提交数据的区别：表单提交是提交的整个页面中的数据，提交数据之后会抛弃之前的页面(刷新页面)；ajax是在当前页面提取某些数据并提交出去，并能接收返回来的数据，处理之后进而显示在当前页面(不刷新页面)。
47.服务端和客户端传输数据有哪些方式
 （1）XMLHttpRequest (XHR)
      （2）动态脚本标签插入
      （3）框架
      （4）Comet
      （5）多部分的XHR
48.怎么优化模糊查询
对数据库要搜索的字段建立索引、函数来进行模糊查询
49.怎么优化索引以及聚合索引
主键就是聚集索引
2、只要建立索引就能显著提高查询速度
3、把所有需要提高查询速度的字段都加进聚集索引，以提高查询速度
　(四)其他书上没有的索引使用经验总结
1、用聚合索引比用不是聚合索引的主键速度快
2、用聚合索引比用一般的主键作order by时速度快，特别是在小数据量情况下
3、使用聚合索引内的时间段，搜索时间会按数据占整个数据表的百分比成比例减少，而无论聚合索引使用了多少个
4 、日期列不会因为有分秒的输入而减慢查询速度
(五)其他注意事项
1. 不要索引常用的小型表
2. 不要把社会保障号码(SSN)或身份证号码(ID)选作键
3. 不要用用户的键
4. 不要索引 memo/notes 字段和不要索引大型文本字段(许多字符)
5. 使用系统生成的主键
50.mvc的优缺点
1.各施其职，互不干涉
2.有利于开发中的分工
3.有利于组件的重用
(1)增加了系统结构和实现的复杂性。对于简单的界面，严格遵循MVC，使模型、视图与控制器分离，会增加结构的复杂性，并可能产生过多的更新操作，降低运行效率。
(2)视图与控制器间的过于紧密的连接。视图与控制器是相互分离，但确实联系紧密的部件，视图没有控制器的存在，其应用是很有限的，反之亦然，这样就妨碍了他们的独立重用。
(3)视图对模型数据的低效率访问。依据模型操作接口的不同，视图可能需要多次调用才能获得足够的显示数据。对未变化数据的不必要的频繁访问，也将损害操作性能。
(4) 目前，一般高级的界面工具或构造器不支持MVC模式。改造这些工具以适应MVC需要和建立分离的部件的代价是很高的，从而造成使用MVC的困难。
51.mybatis中#和$符的区别
#{} 使用#{}意味着使用的预编译的语句，即在使用jdbc时的preparedStatement，sql语句中如果存在参数则会使用?作占位符，我们知道这种方式可以防止sql注入，并且在使用#{}时形成的sql语句，已经带有引号，例，select  * from table1 where id=#{id}  在调用这个语句时我们可以通过后台看到打印出的sql为：select * from table1 where id='2' 加入传的值为2.也就是说在组成sql语句的时候把参数默认为字符串。
${}使用${}时的sql不会当做字符串处理，是什么就是什么，如上边的语句：select * from table1 where id=${id} 在调用这个语句时控制台打印的为：select * from table1 where id=2 ，假设传的参数值为2
52.说出在JSP页面里是怎么分页的
分页依据： 
select 字段列表 from 表名 limit m,n; 
m: 表示起始记录，并且从0开始 
n: 查询记录的个数，每页记录数
分页信息 
共多少页 
有没有上一页 
有没有下一页 
当前页 
注：分页信息类Page 
注2：创建分页信息辅助类PageUtil 
public static Page createPage(int everyPage,int totalCount,int currentPage) 
everyPage: 程序员定 
totalCount: 总记录数，查询数据库表记录 select count(*) from 表名 
currentPage: 从默认第一页开始，下一页= 当前页+1 上一页 = 当前页-1
分页数据集合List 
依据查询语句获得集合： select 字段列表 from 表名 limit m,n; 
53.存储过程和函数的区别
存储过程：可以使得对的管理、以及显示关于及其用户信息的工作容易得多。存储过程是SQL语句和可选控制流语句的预编译集合，以一个名称存储并作为一个单元处理。存储过程存储在数据库内，可由应用程序通过一个调用执行，而且允许用户声明变量、有条件执行以及其它强大的编程功能。存储过程可包含程序流、逻辑以及对数据库的查询。它们可以接受参数、输出参数、返回单个或多个结果集以及返回值。
54.数据库中的锁，什么是悲观锁，什么是乐观锁？
是指两个或两个以上的进程在执行过程中，因争夺资源而造成的一种互相等待的现象，若无外力作用，它们都将无法推进下去。此时称系统处于死锁状态或系统产生了死锁，这些永远在互相等待的进程称为死锁进程。由于资源占用是互斥的，当某个进程提出申请资源后，使得有关进程在无外力协助下，永远分配不到必需的资源而无法继续运行，这就产生了一种特殊现象死锁
55.简述二叉树原理。
在计算机科学中，二叉树是每个结点最多有两个子树的树结构。通常子树被称作“左子树”（left subtree）和“右子树”（right subtree）。二叉树常被用于实现二叉查找树和二叉堆。